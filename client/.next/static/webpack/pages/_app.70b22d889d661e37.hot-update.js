"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/index.js":
/*!**************************!*\
  !*** ./context/index.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StateContextProvider\": function() { return /* binding */ StateContextProvider; },\n/* harmony export */   \"useStateContext\": function() { return /* binding */ useStateContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ \"./context/constants.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n//INTERNAL  IMPORT\n\n//FETCH CONTRACT\nconst FETCH_CONTRACT = (PROVIDER)=>new ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.Contract(_constants__WEBPACK_IMPORTED_MODULE_5__.REAL_ESTATE_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_5__.REAL_ESTATE_ABI, PROVIDER);\n_c = FETCH_CONTRACT;\n//CONNECTING WITH CONTRACT\nconst connectingWithSmartContract = async ()=>{\n    try {\n        const web3modal = new (web3modal__WEBPACK_IMPORTED_MODULE_3___default())();\n        const connection = await web3modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.providers.Web3Provider(connection);\n        const PROVIDER = provider.getSigner();\n        const contract = FETCH_CONTRACT(PROVIDER);\n        return contract;\n    } catch (error) {\n        console.log(error);\n    }\n};\n// INTERNAL\nconst StateContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst StateContextProvider = (param)=>{\n    let { children  } = param;\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    //STATE VARIABLE\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [accountBalance, setAccountBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [userBlance, setUserBlance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [getHighestRatedProduct, setGetHighestRatedProduct] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [loader, setLoader] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [count, setCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    //NOTIFICATION\n    const notifySuccess = (msg)=>react_hot_toast__WEBPACK_IMPORTED_MODULE_4__[\"default\"].success(msg, {\n            duration: 2000\n        });\n    const notifyError = (msg)=>react_hot_toast__WEBPACK_IMPORTED_MODULE_4__[\"default\"].error(msg, {\n            duration: 2000\n        });\n    //---CHECK IF WALLET IS CONNECTD\n    const checkIfWalletConnected = async ()=>{\n        try {\n            if (!window.ethereum) return notifyError(\"Install MateMask\");\n            const network = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.handleNetworkSwitch)();\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (accounts.length) {\n                setCurrentAccount(accounts[0]);\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.providers.Web3Provider(window.ethereum);\n                const getBalance = await provider.getBalance(accounts[0]);\n                const convertBal = ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.utils.formatEther(getBalance);\n                setAccountBalance(convertBal);\n                setUserBlance(convertBal);\n            } else {\n                console.log(\"NO ACCOUNT\");\n            }\n            return accounts[0];\n        } catch (error) {\n            console.log(\"NO CONNACTION\");\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkIfWalletConnected();\n    }, []);\n    //---CONNECT WALLET FUNCTION\n    const connectWallet = async ()=>{\n        try {\n            if (!window.ethereum) return notifyError(\"Install MateMask\");\n            const network = await (0,_constants__WEBPACK_IMPORTED_MODULE_5__.handleNetworkSwitch)();\n            setLoader(true);\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            setCurrentAccount(accounts[0]);\n            setLoader(false);\n            notifySuccess(\"Wallet connected successfully\");\n            setCount(count + 1);\n        } catch (error) {\n            notifyError(\"Install MateMask\");\n            console.log(error);\n        }\n    };\n    //CREATE PROPERTY\n    const createPropertyFunction = async (form)=>{\n        const { propertyTitle , description , category , price , images , propertyAddress  } = form;\n        try {\n            setLoader(true);\n            const contract = await connectingWithSmartContract();\n            const address = await checkIfWalletConnected();\n            const transaction = await contract.listProperty(address, price, propertyTitle, category, images, propertyAddress, description);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Transaction went successfully\");\n            setCount(count + 1);\n            router.push(\"/author\");\n            console.log(\"contract call successs\", transaction);\n        } catch (err) {\n            setLoader(false);\n            notifyError(\"Something went wrong\");\n            console.log(\"contract call failure\", err);\n            window.location.reload();\n        }\n    };\n    //UPDATE PROPERTY\n    const updatePropertyFunction = async (form)=>{\n        const { productId , propertyTitle , description , category , images , propertyAddress  } = form;\n        try {\n            const contract = await connectingWithSmartContract();\n            const address = await checkIfWalletConnected();\n            const transaction = await contract.updateProperty(address, productId, propertyTitle, category, images, propertyAddress, description);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Transaction went successfully\");\n            setCount(count + 1);\n            router.push(\"/author\");\n        } catch (err) {\n            setLoader(false);\n            notifyError(\"Something went wrong\");\n            console.log(\"contract call failure\", err);\n            window.location.reload();\n        }\n    };\n    //UPDATE PRICE\n    const updatePriceFunction = async (form)=>{\n        const { productID , price  } = form;\n        try {\n            const contract = await connectingWithSmartContract();\n            const address = await checkIfWalletConnected();\n            const transaction = await contract.updatePrice(address, productID, ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.utils.parseEther(price));\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Transaction went successfully\");\n            setCount(count + 1);\n            console.info(\"contract call successs\", transaction);\n        } catch (err) {\n            setLoader(false);\n            notifyError(\"Something went wrong\");\n            console.log(\"contract call failure\", err);\n            window.location.reload();\n        }\n    };\n    //BUY PROPERTY\n    const buyPropertyFunction = async (buying)=>{\n        const { productID , amount  } = buying;\n        const money = ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.utils.parseEther(amount);\n        try {\n            const contract = await connectingWithSmartContract();\n            const address = await checkIfWalletConnected();\n            const transaction = await contract.buyProperty(productID, address, {\n                value: money.toString()\n            });\n            await transaction.wait();\n            console.info(\"contract call successs\", transaction);\n            setLoader(false);\n            notifySuccess(\"Transaction went successfully\");\n            setCount(count + 1);\n            router.push(\"/author\");\n        } catch (err) {\n            setLoader(false);\n            notifyError(\"Something went wrong\");\n            console.log(\"contract call failure\", err);\n            window.location.reload();\n        }\n    };\n    //ADD REVIEW\n    const addReviewFunction = async (from)=>{\n        const { productID , rating , comment  } = from;\n        try {\n            const contract = await connectingWithSmartContract();\n            const address = await checkIfWalletConnected();\n            const transaction = await contract.addReview(productID, rating, comment, address);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Transaction went successfully\");\n            setCount(count + 1);\n            window.location.reload();\n        } catch (err) {\n            setLoader(false);\n            notifyError(\"Something went wrong\");\n            console.log(\"contract call failure\", err);\n            window.location.reload();\n        }\n    };\n    //REVIEW - LIKE\n    const likeReviewFunction = async (productID, reviewIndex)=>{\n        try {\n            const contract = await connectingWithSmartContract();\n            const address = await checkIfWalletConnected();\n            const transaction = await contract.likeReview(productID, reviewIndex, address);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Transaction went successfully\");\n            setCount(count + 1);\n            window.location.reload();\n        } catch (err) {\n            setLoader(false);\n            notifyError(\"Something went wrong\");\n            console.log(\"contract call failure\", err);\n            window.location.reload();\n        }\n    };\n    //GET PROPERTIES DATA NORAML\n    //getAllProperties()\n    const getPropertiesData = async ()=>{\n        const address = await checkIfWalletConnected();\n        try {\n            if (address) {\n                const contract = await connectingWithSmartContract();\n                const properties = await (contract === null || contract === void 0 ? void 0 : contract.getAllProperties());\n                const parsedProperties = properties === null || properties === void 0 ? void 0 : properties.map((property, i)=>({\n                        owner: property.owner,\n                        title: property.propertyTitle,\n                        description: property.description,\n                        category: property.category,\n                        price: ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.utils.formatEther(property.price.toString()),\n                        productID: property.productID.toNumber(),\n                        reviewers: property.reviewers,\n                        reviews: property.reviews,\n                        image: property.images,\n                        address: property.propertyAddress\n                    }));\n                console.log(parsedProperties);\n                return parsedProperties;\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    //getHighestRatedProduct()\n    const getHighestRatedProductFunction = async ()=>{\n        try {\n            const address = await checkIfWalletConnected();\n            if (address) {\n                const contract = await connectingWithSmartContract();\n                const totalReviews = await contract.getHighestRatedProduct();\n                setGetHighestRatedProduct(totalReviews.toNumber());\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    //getProductReviews()\n    const getProductReviewsFunction = async (productId)=>{\n        try {\n            const address = await checkIfWalletConnected();\n            if (address) {\n                const contract = await connectingWithSmartContract();\n                const getProductReviews = await contract.getProductReviews(Number(productId));\n                const parsedReviews = getProductReviews === null || getProductReviews === void 0 ? void 0 : getProductReviews.map((review, i)=>({\n                        reviewer: review.reviewer,\n                        likes: review.likes.toNumber(),\n                        comment: review.comment,\n                        rating: review.rating,\n                        productID: review.productId.toNumber(),\n                        reviewIndex: review.reviewIndex.toNumber()\n                    }));\n                return parsedReviews;\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    //getProperty()\n    const getPropertyFunction = async (id)=>{\n        try {\n            const address = await checkIfWalletConnected();\n            if (address) {\n                const contract = await connectingWithSmartContract();\n                const propertyItem = await contract.getProperty(Number(id));\n                const property = {\n                    productID: propertyItem === null || propertyItem === void 0 ? void 0 : propertyItem[0].toNumber(),\n                    owner: propertyItem === null || propertyItem === void 0 ? void 0 : propertyItem[1],\n                    title: propertyItem === null || propertyItem === void 0 ? void 0 : propertyItem[3],\n                    category: propertyItem === null || propertyItem === void 0 ? void 0 : propertyItem[4],\n                    description: propertyItem === null || propertyItem === void 0 ? void 0 : propertyItem[7],\n                    price: ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.utils.formatEther(propertyItem === null || propertyItem === void 0 ? void 0 : propertyItem[2].toString()),\n                    address: propertyItem === null || propertyItem === void 0 ? void 0 : propertyItem[6],\n                    image: propertyItem === null || propertyItem === void 0 ? void 0 : propertyItem[5]\n                };\n                return property;\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    //getUserProperties()\n    const getUserPropertiesFunction = async ()=>{\n        try {\n            const address = await checkIfWalletConnected();\n            if (address) {\n                const contract = await connectingWithSmartContract();\n                const properties = await contract.getUserProperties(address);\n                const parsedProperties = properties.map((property, i)=>({\n                        owner: property.owner,\n                        title: property.propertyTitle,\n                        description: property.description,\n                        category: property.category,\n                        price: ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.utils.formatEther(property.price.toString()),\n                        productID: property.productID.toNumber(),\n                        reviewers: property.reviewers,\n                        reviews: property.reviews,\n                        image: property.images,\n                        address: property.propertyAddress\n                    }));\n                return parsedProperties;\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    //getUserReviews()\n    const getUserReviewsFunction = async ()=>{\n        try {\n            const address = await checkIfWalletConnected();\n            if (address) {\n                const contract = await connectingWithSmartContract();\n                const getUserReviews = await contract.getUserReviews(address);\n                const parsedUserReviews = getUserReviews.map((property, i)=>({\n                        comment: property.comment,\n                        likes: property.likes.toNumber(),\n                        productId: property.productId.toNumber(),\n                        rating: property.rating,\n                        reviewIndex: property.reviewIndex.toNumber(),\n                        reviewer: property.reviewer\n                    }));\n                return parsedUserReviews;\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    //totalProperty()\n    const totalPropertyFunction = async ()=>{\n        try {\n            const address = await checkIfWalletConnected();\n            if (address) {\n                const contract = await connectingWithSmartContract();\n                const totalProperty = await contract.propertyIndex();\n                return totalProperty.toNumber();\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const totalReviewsFunction = async ()=>{\n        try {\n            const address = await checkIfWalletConnected();\n            if (address) {\n                const contract = await connectingWithSmartContract();\n                const totalReviews = await contract.reviewsCounter();\n                return totalReviews.toNumber();\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        getHighestRatedProductFunction();\n        getUserReviewsFunction();\n        totalPropertyFunction();\n        totalReviewsFunction();\n    }, [\n        currentAccount\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(StateContext.Provider, {\n        value: {\n            //CONTRACT\n            connectWallet,\n            currentAccount,\n            accountBalance,\n            //PROPERTY\n            createPropertyFunction,\n            updatePropertyFunction,\n            updatePriceFunction,\n            buyPropertyFunction,\n            getPropertyFunction,\n            getUserPropertiesFunction,\n            totalPropertyFunction,\n            getPropertiesData,\n            //REVIEW\n            addReviewFunction,\n            likeReviewFunction,\n            getProductReviewsFunction,\n            getUserReviewsFunction,\n            totalReviewsFunction,\n            getHighestRatedProduct,\n            //STATE VARIABLE\n            userBlance,\n            PINATA_API_KEY: _constants__WEBPACK_IMPORTED_MODULE_5__.PINATA_API_KEY,\n            PINATA_SECRECT_KEY: _constants__WEBPACK_IMPORTED_MODULE_5__.PINATA_SECRECT_KEY,\n            loader,\n            setLoader,\n            notifySuccess,\n            notifyError\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\hp\\\\Downloads\\\\realestatesourcecode\\\\realestatesourcecode\\\\finalcodeupdated\\\\client\\\\context\\\\index.js\",\n        lineNumber: 476,\n        columnNumber: 5\n    }, undefined);\n};\n_s(StateContextProvider, \"4CUbcGpfR9aA3uaqqlHtPnVWjlQ=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c1 = StateContextProvider;\nconst useStateContext = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(StateContext);\n};\n_s1(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c, _c1;\n$RefreshReg$(_c, \"FETCH_CONTRACT\");\n$RefreshReg$(_c1, \"StateContextProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb250ZXh0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4RTtBQUN0QztBQUNSO0FBQ0U7QUFDRTtBQUVwQyxrQkFBa0I7QUFRRztBQUVyQixnQkFBZ0I7QUFDaEIsTUFBTWUsaUJBQWlCLENBQUNDLFdBQ3RCLElBQUlWLG1EQUFlLENBQUNNLDJEQUFtQkEsRUFBRUQsdURBQWVBLEVBQUVLO0tBRHRERDtBQUdOLDBCQUEwQjtBQUMxQixNQUFNRyw4QkFBOEIsVUFBWTtJQUM5QyxJQUFJO1FBQ0YsTUFBTUMsWUFBWSxJQUFJWixrREFBU0E7UUFDL0IsTUFBTWEsYUFBYSxNQUFNRCxVQUFVRSxPQUFPO1FBQzFDLE1BQU1DLFdBQVcsSUFBSWhCLGlFQUE2QixDQUFDYztRQUNuRCxNQUFNSixXQUFXTSxTQUFTRyxTQUFTO1FBRW5DLE1BQU1DLFdBQVdYLGVBQWVDO1FBRWhDLE9BQU9VO0lBQ1QsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFDLEdBQUcsQ0FBQ0Y7SUFDZDtBQUNGO0FBQ0EsV0FBVztBQUNYLE1BQU1HLDZCQUFlMUIsb0RBQWFBO0FBRTNCLE1BQU0yQix1QkFBdUIsU0FBa0I7UUFBakIsRUFBRUMsU0FBUSxFQUFFOztJQUMvQyxNQUFNQyxTQUFTNUIsc0RBQVNBO0lBQ3hCLGdCQUFnQjtJQUNoQixNQUFNLENBQUM2QixnQkFBZ0JDLGtCQUFrQixHQUFHakMsK0NBQVFBO0lBQ3BELE1BQU0sQ0FBQ2tDLGdCQUFnQkMsa0JBQWtCLEdBQUduQywrQ0FBUUE7SUFDcEQsTUFBTSxDQUFDb0MsWUFBWUMsY0FBYyxHQUFHckMsK0NBQVFBO0lBQzVDLE1BQU0sQ0FBQ3NDLHdCQUF3QkMsMEJBQTBCLEdBQUd2QywrQ0FBUUE7SUFDcEUsTUFBTSxDQUFDd0MsUUFBUUMsVUFBVSxHQUFHekMsK0NBQVFBLENBQUMsS0FBSztJQUMxQyxNQUFNLENBQUMwQyxPQUFPQyxTQUFTLEdBQUczQywrQ0FBUUEsQ0FBQztJQUVuQyxjQUFjO0lBQ2QsTUFBTTRDLGdCQUFnQixDQUFDQyxNQUFRdkMsK0RBQWEsQ0FBQ3VDLEtBQUs7WUFBRUUsVUFBVTtRQUFLO0lBQ25FLE1BQU1DLGNBQWMsQ0FBQ0gsTUFBUXZDLDZEQUFXLENBQUN1QyxLQUFLO1lBQUVFLFVBQVU7UUFBSztJQUUvRCxnQ0FBZ0M7SUFDaEMsTUFBTUUseUJBQXlCLFVBQVk7UUFDekMsSUFBSTtZQUNGLElBQUksQ0FBQ0MsT0FBT0MsUUFBUSxFQUFFLE9BQU9ILFlBQVk7WUFDekMsTUFBTUksVUFBVSxNQUFNekMsK0RBQW1CQTtZQUV6QyxNQUFNMEMsV0FBVyxNQUFNSCxPQUFPQyxRQUFRLENBQUNHLE9BQU8sQ0FBQztnQkFDN0NDLFFBQVE7WUFDVjtZQUNBLElBQUlGLFNBQVNHLE1BQU0sRUFBRTtnQkFDbkJ2QixrQkFBa0JvQixRQUFRLENBQUMsRUFBRTtnQkFDN0IsTUFBTWpDLFdBQVcsSUFBSWhCLGlFQUE2QixDQUFDOEMsT0FBT0MsUUFBUTtnQkFDbEUsTUFBTU0sYUFBYSxNQUFNckMsU0FBU3FDLFVBQVUsQ0FBQ0osUUFBUSxDQUFDLEVBQUU7Z0JBQ3hELE1BQU1LLGFBQWF0RCw0REFBd0IsQ0FBQ3FEO2dCQUM1Q3RCLGtCQUFrQnVCO2dCQUNsQnJCLGNBQWNxQjtZQUNoQixPQUFPO2dCQUNMaEMsUUFBUUMsR0FBRyxDQUFDO1lBQ2QsQ0FBQztZQUVELE9BQU8wQixRQUFRLENBQUMsRUFBRTtRQUNwQixFQUFFLE9BQU81QixPQUFPO1lBQ2RDLFFBQVFDLEdBQUcsQ0FBQztRQUNkO0lBQ0Y7SUFFQTVCLGdEQUFTQSxDQUFDLElBQU07UUFDZGtEO0lBQ0YsR0FBRyxFQUFFO0lBRUwsNEJBQTRCO0lBQzVCLE1BQU1ZLGdCQUFnQixVQUFZO1FBQ2hDLElBQUk7WUFDRixJQUFJLENBQUNYLE9BQU9DLFFBQVEsRUFBRSxPQUFPSCxZQUFZO1lBQ3pDLE1BQU1JLFVBQVUsTUFBTXpDLCtEQUFtQkE7WUFDekM4QixVQUFVLElBQUk7WUFDZCxNQUFNWSxXQUFXLE1BQU1ILE9BQU9DLFFBQVEsQ0FBQ0csT0FBTyxDQUFDO2dCQUM3Q0MsUUFBUTtZQUNWO1lBRUF0QixrQkFBa0JvQixRQUFRLENBQUMsRUFBRTtZQUM3QlosVUFBVSxLQUFLO1lBQ2ZHLGNBQWM7WUFDZEQsU0FBU0QsUUFBUTtRQUNuQixFQUFFLE9BQU9qQixPQUFPO1lBQ2R1QixZQUFZO1lBQ1p0QixRQUFRQyxHQUFHLENBQUNGO1FBQ2Q7SUFDRjtJQUVBLGlCQUFpQjtJQUNqQixNQUFNcUMseUJBQXlCLE9BQU9DLE9BQVM7UUFDN0MsTUFBTSxFQUNKQyxjQUFhLEVBQ2JDLFlBQVcsRUFDWEMsU0FBUSxFQUNSQyxNQUFLLEVBQ0xDLE9BQU0sRUFDTkMsZ0JBQWUsRUFDaEIsR0FBR047UUFFSixJQUFJO1lBQ0Z0QixVQUFVLElBQUk7WUFDZCxNQUFNakIsV0FBVyxNQUFNUjtZQUV2QixNQUFNc0QsVUFBVSxNQUFNckI7WUFFdEIsTUFBTXNCLGNBQWMsTUFBTS9DLFNBQVNnRCxZQUFZLENBQzdDRixTQUNBSCxPQUNBSCxlQUNBRSxVQUNBRSxRQUNBQyxpQkFDQUo7WUFHRixNQUFNTSxZQUFZRSxJQUFJO1lBQ3RCaEMsVUFBVSxLQUFLO1lBQ2ZHLGNBQWM7WUFDZEQsU0FBU0QsUUFBUTtZQUNqQlgsT0FBTzJDLElBQUksQ0FBQztZQUNaaEQsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQjRDO1FBQ3hDLEVBQUUsT0FBT0ksS0FBSztZQUNabEMsVUFBVSxLQUFLO1lBQ2ZPLFlBQVk7WUFDWnRCLFFBQVFDLEdBQUcsQ0FBQyx5QkFBeUJnRDtZQUNyQ3pCLE9BQU8wQixRQUFRLENBQUNDLE1BQU07UUFDeEI7SUFDRjtJQUVBLGlCQUFpQjtJQUNqQixNQUFNQyx5QkFBeUIsT0FBT2YsT0FBUztRQUM3QyxNQUFNLEVBQ0pnQixVQUFTLEVBQ1RmLGNBQWEsRUFDYkMsWUFBVyxFQUNYQyxTQUFRLEVBQ1JFLE9BQU0sRUFDTkMsZ0JBQWUsRUFDaEIsR0FBR047UUFFSixJQUFJO1lBQ0YsTUFBTXZDLFdBQVcsTUFBTVI7WUFFdkIsTUFBTXNELFVBQVUsTUFBTXJCO1lBQ3RCLE1BQU1zQixjQUFjLE1BQU0vQyxTQUFTd0QsY0FBYyxDQUMvQ1YsU0FDQVMsV0FDQWYsZUFDQUUsVUFDQUUsUUFDQUMsaUJBQ0FKO1lBR0YsTUFBTU0sWUFBWUUsSUFBSTtZQUN0QmhDLFVBQVUsS0FBSztZQUNmRyxjQUFjO1lBQ2RELFNBQVNELFFBQVE7WUFDakJYLE9BQU8yQyxJQUFJLENBQUM7UUFDZCxFQUFFLE9BQU9DLEtBQUs7WUFDWmxDLFVBQVUsS0FBSztZQUNmTyxZQUFZO1lBQ1p0QixRQUFRQyxHQUFHLENBQUMseUJBQXlCZ0Q7WUFDckN6QixPQUFPMEIsUUFBUSxDQUFDQyxNQUFNO1FBQ3hCO0lBQ0Y7SUFFQSxjQUFjO0lBQ2QsTUFBTUksc0JBQXNCLE9BQU9sQixPQUFTO1FBQzFDLE1BQU0sRUFBRW1CLFVBQVMsRUFBRWYsTUFBSyxFQUFFLEdBQUdKO1FBQzdCLElBQUk7WUFDRixNQUFNdkMsV0FBVyxNQUFNUjtZQUV2QixNQUFNc0QsVUFBVSxNQUFNckI7WUFDdEIsTUFBTXNCLGNBQWMsTUFBTS9DLFNBQVMyRCxXQUFXLENBQzVDYixTQUNBWSxXQUNBOUUsMkRBQXVCLENBQUMrRDtZQUcxQixNQUFNSSxZQUFZRSxJQUFJO1lBQ3RCaEMsVUFBVSxLQUFLO1lBQ2ZHLGNBQWM7WUFDZEQsU0FBU0QsUUFBUTtZQUNqQmhCLFFBQVEyRCxJQUFJLENBQUMsMEJBQTBCZDtRQUN6QyxFQUFFLE9BQU9JLEtBQUs7WUFDWmxDLFVBQVUsS0FBSztZQUNmTyxZQUFZO1lBQ1p0QixRQUFRQyxHQUFHLENBQUMseUJBQXlCZ0Q7WUFDckN6QixPQUFPMEIsUUFBUSxDQUFDQyxNQUFNO1FBQ3hCO0lBQ0Y7SUFFQSxjQUFjO0lBQ2QsTUFBTVMsc0JBQXNCLE9BQU9DLFNBQVc7UUFDNUMsTUFBTSxFQUFFTCxVQUFTLEVBQUVNLE9BQU0sRUFBRSxHQUFHRDtRQUM5QixNQUFNRSxRQUFRckYsMkRBQXVCLENBQUNvRjtRQUV0QyxJQUFJO1lBQ0YsTUFBTWhFLFdBQVcsTUFBTVI7WUFFdkIsTUFBTXNELFVBQVUsTUFBTXJCO1lBRXRCLE1BQU1zQixjQUFjLE1BQU0vQyxTQUFTa0UsV0FBVyxDQUFDUixXQUFXWixTQUFTO2dCQUNqRXFCLE9BQU9GLE1BQU1HLFFBQVE7WUFDdkI7WUFDQSxNQUFNckIsWUFBWUUsSUFBSTtZQUN0Qi9DLFFBQVEyRCxJQUFJLENBQUMsMEJBQTBCZDtZQUN2QzlCLFVBQVUsS0FBSztZQUNmRyxjQUFjO1lBQ2RELFNBQVNELFFBQVE7WUFDakJYLE9BQU8yQyxJQUFJLENBQUM7UUFDZCxFQUFFLE9BQU9DLEtBQUs7WUFDWmxDLFVBQVUsS0FBSztZQUNmTyxZQUFZO1lBQ1p0QixRQUFRQyxHQUFHLENBQUMseUJBQXlCZ0Q7WUFDckN6QixPQUFPMEIsUUFBUSxDQUFDQyxNQUFNO1FBQ3hCO0lBQ0Y7SUFFQSxZQUFZO0lBQ1osTUFBTWdCLG9CQUFvQixPQUFPQyxPQUFTO1FBQ3hDLE1BQU0sRUFBRVosVUFBUyxFQUFFYSxPQUFNLEVBQUVDLFFBQU8sRUFBRSxHQUFHRjtRQUV2QyxJQUFJO1lBQ0YsTUFBTXRFLFdBQVcsTUFBTVI7WUFFdkIsTUFBTXNELFVBQVUsTUFBTXJCO1lBRXRCLE1BQU1zQixjQUFjLE1BQU0vQyxTQUFTeUUsU0FBUyxDQUMxQ2YsV0FDQWEsUUFDQUMsU0FDQTFCO1lBRUYsTUFBTUMsWUFBWUUsSUFBSTtZQUN0QmhDLFVBQVUsS0FBSztZQUNmRyxjQUFjO1lBQ2RELFNBQVNELFFBQVE7WUFDakJRLE9BQU8wQixRQUFRLENBQUNDLE1BQU07UUFDeEIsRUFBRSxPQUFPRixLQUFLO1lBQ1psQyxVQUFVLEtBQUs7WUFDZk8sWUFBWTtZQUNadEIsUUFBUUMsR0FBRyxDQUFDLHlCQUF5QmdEO1lBQ3JDekIsT0FBTzBCLFFBQVEsQ0FBQ0MsTUFBTTtRQUN4QjtJQUNGO0lBRUEsZUFBZTtJQUNmLE1BQU1xQixxQkFBcUIsT0FBT2hCLFdBQVdpQixjQUFnQjtRQUMzRCxJQUFJO1lBQ0YsTUFBTTNFLFdBQVcsTUFBTVI7WUFDdkIsTUFBTXNELFVBQVUsTUFBTXJCO1lBQ3RCLE1BQU1zQixjQUFjLE1BQU0vQyxTQUFTNEUsVUFBVSxDQUMzQ2xCLFdBQ0FpQixhQUNBN0I7WUFFRixNQUFNQyxZQUFZRSxJQUFJO1lBQ3RCaEMsVUFBVSxLQUFLO1lBQ2ZHLGNBQWM7WUFDZEQsU0FBU0QsUUFBUTtZQUNqQlEsT0FBTzBCLFFBQVEsQ0FBQ0MsTUFBTTtRQUN4QixFQUFFLE9BQU9GLEtBQUs7WUFDWmxDLFVBQVUsS0FBSztZQUNmTyxZQUFZO1lBQ1p0QixRQUFRQyxHQUFHLENBQUMseUJBQXlCZ0Q7WUFDckN6QixPQUFPMEIsUUFBUSxDQUFDQyxNQUFNO1FBQ3hCO0lBQ0Y7SUFFQSw0QkFBNEI7SUFFNUIsb0JBQW9CO0lBQ3BCLE1BQU13QixvQkFBb0IsVUFBWTtRQUNwQyxNQUFNL0IsVUFBVSxNQUFNckI7UUFDdEIsSUFBSTtZQUNGLElBQUlxQixTQUFTO2dCQUNYLE1BQU05QyxXQUFXLE1BQU1SO2dCQUV2QixNQUFNc0YsYUFBYSxPQUFNOUUscUJBQUFBLHNCQUFBQSxLQUFBQSxJQUFBQSxTQUFVK0UsZ0JBQWdCO2dCQUVuRCxNQUFNQyxtQkFBbUJGLHVCQUFBQSx3QkFBQUEsS0FBQUEsSUFBQUEsV0FBWUcsR0FBRyxDQUFDLENBQUNDLFVBQVVDLElBQU87d0JBQ3pEQyxPQUFPRixTQUFTRSxLQUFLO3dCQUNyQkMsT0FBT0gsU0FBUzFDLGFBQWE7d0JBQzdCQyxhQUFheUMsU0FBU3pDLFdBQVc7d0JBQ2pDQyxVQUFVd0MsU0FBU3hDLFFBQVE7d0JBQzNCQyxPQUFPL0QsNERBQXdCLENBQUNzRyxTQUFTdkMsS0FBSyxDQUFDeUIsUUFBUTt3QkFDdkRWLFdBQVd3QixTQUFTeEIsU0FBUyxDQUFDNEIsUUFBUTt3QkFDdENDLFdBQVdMLFNBQVNLLFNBQVM7d0JBQzdCQyxTQUFTTixTQUFTTSxPQUFPO3dCQUN6QkMsT0FBT1AsU0FBU3RDLE1BQU07d0JBQ3RCRSxTQUFTb0MsU0FBU3JDLGVBQWU7b0JBQ25DO2dCQUNBM0MsUUFBUUMsR0FBRyxDQUFDNkU7Z0JBQ1osT0FBT0E7WUFDVCxDQUFDO1FBQ0gsRUFBRSxPQUFPL0UsT0FBTztZQUNkQyxRQUFRQyxHQUFHLENBQUNGO1FBQ2Q7SUFDRjtJQUVBLDBCQUEwQjtJQUMxQixNQUFNeUYsaUNBQWlDLFVBQVk7UUFDakQsSUFBSTtZQUNGLE1BQU01QyxVQUFVLE1BQU1yQjtZQUN0QixJQUFJcUIsU0FBUztnQkFDWCxNQUFNOUMsV0FBVyxNQUFNUjtnQkFDdkIsTUFBTW1HLGVBQWUsTUFBTTNGLFNBQVNjLHNCQUFzQjtnQkFFMURDLDBCQUEwQjRFLGFBQWFMLFFBQVE7WUFDakQsQ0FBQztRQUNILEVBQUUsT0FBT3JGLE9BQU87WUFDZEMsUUFBUUMsR0FBRyxDQUFDRjtRQUNkO0lBQ0Y7SUFFQSxxQkFBcUI7SUFDckIsTUFBTTJGLDRCQUE0QixPQUFPckMsWUFBYztRQUNyRCxJQUFJO1lBQ0YsTUFBTVQsVUFBVSxNQUFNckI7WUFDdEIsSUFBSXFCLFNBQVM7Z0JBQ1gsTUFBTTlDLFdBQVcsTUFBTVI7Z0JBRXZCLE1BQU1xRyxvQkFBb0IsTUFBTTdGLFNBQVM2RixpQkFBaUIsQ0FDeERDLE9BQU92QztnQkFHVCxNQUFNd0MsZ0JBQWdCRiw4QkFBQUEsK0JBQUFBLEtBQUFBLElBQUFBLGtCQUFtQlosR0FBRyxDQUFDLENBQUNlLFFBQVFiLElBQU87d0JBQzNEYyxVQUFVRCxPQUFPQyxRQUFRO3dCQUN6QkMsT0FBT0YsT0FBT0UsS0FBSyxDQUFDWixRQUFRO3dCQUM1QmQsU0FBU3dCLE9BQU94QixPQUFPO3dCQUN2QkQsUUFBUXlCLE9BQU96QixNQUFNO3dCQUNyQmIsV0FBV3NDLE9BQU96QyxTQUFTLENBQUMrQixRQUFRO3dCQUNwQ1gsYUFBYXFCLE9BQU9yQixXQUFXLENBQUNXLFFBQVE7b0JBQzFDO2dCQUNBLE9BQU9TO1lBQ1QsQ0FBQztRQUNILEVBQUUsT0FBTzlGLE9BQU87WUFDZEMsUUFBUUMsR0FBRyxDQUFDRjtRQUNkO0lBQ0Y7SUFFQSxlQUFlO0lBQ2YsTUFBTWtHLHNCQUFzQixPQUFPQyxLQUFPO1FBQ3hDLElBQUk7WUFDRixNQUFNdEQsVUFBVSxNQUFNckI7WUFDdEIsSUFBSXFCLFNBQVM7Z0JBQ1gsTUFBTTlDLFdBQVcsTUFBTVI7Z0JBQ3ZCLE1BQU02RyxlQUFlLE1BQU1yRyxTQUFTc0csV0FBVyxDQUFDUixPQUFPTTtnQkFFdkQsTUFBTWxCLFdBQVc7b0JBQ2Z4QixXQUFXMkMseUJBQUFBLDBCQUFBQSxLQUFBQSxJQUFBQSxZQUFjLENBQUMsRUFBRSxDQUFDZixRQUFRLEVBQUU7b0JBQ3ZDRixPQUFPaUIseUJBQUFBLDBCQUFBQSxLQUFBQSxJQUFBQSxZQUFjLENBQUMsRUFBRTtvQkFDeEJoQixPQUFPZ0IseUJBQUFBLDBCQUFBQSxLQUFBQSxJQUFBQSxZQUFjLENBQUMsRUFBRTtvQkFDeEIzRCxVQUFVMkQseUJBQUFBLDBCQUFBQSxLQUFBQSxJQUFBQSxZQUFjLENBQUMsRUFBRTtvQkFDM0I1RCxhQUFhNEQseUJBQUFBLDBCQUFBQSxLQUFBQSxJQUFBQSxZQUFjLENBQUMsRUFBRTtvQkFDOUIxRCxPQUFPL0QsNERBQXdCLENBQUN5SCx5QkFBQUEsMEJBQUFBLEtBQUFBLElBQUFBLFlBQWMsQ0FBQyxFQUFFLENBQUNqQyxRQUFRLEVBQUU7b0JBQzVEdEIsU0FBU3VELHlCQUFBQSwwQkFBQUEsS0FBQUEsSUFBQUEsWUFBYyxDQUFDLEVBQUU7b0JBQzFCWixPQUFPWSx5QkFBQUEsMEJBQUFBLEtBQUFBLElBQUFBLFlBQWMsQ0FBQyxFQUFFO2dCQUMxQjtnQkFFQSxPQUFPbkI7WUFDVCxDQUFDO1FBQ0gsRUFBRSxPQUFPakYsT0FBTztZQUNkQyxRQUFRQyxHQUFHLENBQUNGO1FBQ2Q7SUFDRjtJQUVBLHFCQUFxQjtJQUNyQixNQUFNc0csNEJBQTRCLFVBQVk7UUFDNUMsSUFBSTtZQUNGLE1BQU16RCxVQUFVLE1BQU1yQjtZQUN0QixJQUFJcUIsU0FBUztnQkFDWCxNQUFNOUMsV0FBVyxNQUFNUjtnQkFFdkIsTUFBTXNGLGFBQWEsTUFBTTlFLFNBQVN3RyxpQkFBaUIsQ0FBQzFEO2dCQUVwRCxNQUFNa0MsbUJBQW1CRixXQUFXRyxHQUFHLENBQUMsQ0FBQ0MsVUFBVUMsSUFBTzt3QkFDeERDLE9BQU9GLFNBQVNFLEtBQUs7d0JBQ3JCQyxPQUFPSCxTQUFTMUMsYUFBYTt3QkFDN0JDLGFBQWF5QyxTQUFTekMsV0FBVzt3QkFDakNDLFVBQVV3QyxTQUFTeEMsUUFBUTt3QkFDM0JDLE9BQU8vRCw0REFBd0IsQ0FBQ3NHLFNBQVN2QyxLQUFLLENBQUN5QixRQUFRO3dCQUN2RFYsV0FBV3dCLFNBQVN4QixTQUFTLENBQUM0QixRQUFRO3dCQUN0Q0MsV0FBV0wsU0FBU0ssU0FBUzt3QkFDN0JDLFNBQVNOLFNBQVNNLE9BQU87d0JBQ3pCQyxPQUFPUCxTQUFTdEMsTUFBTTt3QkFDdEJFLFNBQVNvQyxTQUFTckMsZUFBZTtvQkFDbkM7Z0JBRUEsT0FBT21DO1lBQ1QsQ0FBQztRQUNILEVBQUUsT0FBTy9FLE9BQU87WUFDZEMsUUFBUUMsR0FBRyxDQUFDRjtRQUNkO0lBQ0Y7SUFFQSxrQkFBa0I7SUFDbEIsTUFBTXdHLHlCQUF5QixVQUFZO1FBQ3pDLElBQUk7WUFDRixNQUFNM0QsVUFBVSxNQUFNckI7WUFDdEIsSUFBSXFCLFNBQVM7Z0JBQ1gsTUFBTTlDLFdBQVcsTUFBTVI7Z0JBQ3ZCLE1BQU1rSCxpQkFBaUIsTUFBTTFHLFNBQVMwRyxjQUFjLENBQUM1RDtnQkFFckQsTUFBTTZELG9CQUFvQkQsZUFBZXpCLEdBQUcsQ0FBQyxDQUFDQyxVQUFVQyxJQUFPO3dCQUM3RFgsU0FBU1UsU0FBU1YsT0FBTzt3QkFDekIwQixPQUFPaEIsU0FBU2dCLEtBQUssQ0FBQ1osUUFBUTt3QkFDOUIvQixXQUFXMkIsU0FBUzNCLFNBQVMsQ0FBQytCLFFBQVE7d0JBQ3RDZixRQUFRVyxTQUFTWCxNQUFNO3dCQUN2QkksYUFBYU8sU0FBU1AsV0FBVyxDQUFDVyxRQUFRO3dCQUMxQ1csVUFBVWYsU0FBU2UsUUFBUTtvQkFDN0I7Z0JBRUEsT0FBT1U7WUFDVCxDQUFDO1FBQ0gsRUFBRSxPQUFPMUcsT0FBTztZQUNkQyxRQUFRQyxHQUFHLENBQUNGO1FBQ2Q7SUFDRjtJQUVBLGlCQUFpQjtJQUNqQixNQUFNMkcsd0JBQXdCLFVBQVk7UUFDeEMsSUFBSTtZQUNGLE1BQU05RCxVQUFVLE1BQU1yQjtZQUN0QixJQUFJcUIsU0FBUztnQkFDWCxNQUFNOUMsV0FBVyxNQUFNUjtnQkFFdkIsTUFBTXFILGdCQUFnQixNQUFNN0csU0FBUzhHLGFBQWE7Z0JBRWxELE9BQU9ELGNBQWN2QixRQUFRO1lBQy9CLENBQUM7UUFDSCxFQUFFLE9BQU9yRixPQUFPO1lBQ2RDLFFBQVFDLEdBQUcsQ0FBQ0Y7UUFDZDtJQUNGO0lBRUEsTUFBTThHLHVCQUF1QixVQUFZO1FBQ3ZDLElBQUk7WUFDRixNQUFNakUsVUFBVSxNQUFNckI7WUFDdEIsSUFBSXFCLFNBQVM7Z0JBQ1gsTUFBTTlDLFdBQVcsTUFBTVI7Z0JBRXZCLE1BQU1tRyxlQUFlLE1BQU0zRixTQUFTZ0gsY0FBYztnQkFFbEQsT0FBT3JCLGFBQWFMLFFBQVE7WUFDOUIsQ0FBQztRQUNILEVBQUUsT0FBT3JGLE9BQU87WUFDZEMsUUFBUUMsR0FBRyxDQUFDRjtRQUNkO0lBQ0Y7SUFFQTFCLGdEQUFTQSxDQUFDLElBQU07UUFDZG1IO1FBQ0FlO1FBQ0FHO1FBQ0FHO0lBQ0YsR0FBRztRQUFDdkc7S0FBZTtJQUVuQixxQkFDRSw4REFBQ0osYUFBYTZHLFFBQVE7UUFDcEI5QyxPQUFPO1lBQ0wsVUFBVTtZQUNWOUI7WUFDQTdCO1lBQ0FFO1lBQ0EsVUFBVTtZQUNWNEI7WUFDQWdCO1lBQ0FHO1lBQ0FLO1lBQ0FxQztZQUNBSTtZQUNBSztZQUNBL0I7WUFDQSxRQUFRO1lBQ1JSO1lBQ0FLO1lBQ0FrQjtZQUNBYTtZQUNBTTtZQUNBakc7WUFDQSxnQkFBZ0I7WUFDaEJGO1lBQ0E3QixjQUFjQSx3REFBQUE7WUFDZEMsa0JBQWtCQSw0REFBQUE7WUFDbEJnQztZQUNBQztZQUNBRztZQUNBSTtRQUNGO2tCQUVDbEI7Ozs7OztBQUdQLEVBQUU7R0F4ZFdEOztRQUNJMUIsa0RBQVNBOzs7TUFEYjBCO0FBMGROLE1BQU02RyxrQkFBa0IsSUFBTXpJOztJQUFBQSxPQUFBQSxpREFBVUEsQ0FBQzJCO0FBQVksRUFBRTtJQUFqRDhHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbnRleHQvaW5kZXguanM/NWQyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgdXNlQ29udGV4dCwgY3JlYXRlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgeyBldGhlcnMgfSBmcm9tIFwiZXRoZXJzXCI7XG5pbXBvcnQgV2ViM01vZGFsIGZyb20gXCJ3ZWIzbW9kYWxcIjtcbmltcG9ydCB0b2FzdCBmcm9tIFwicmVhY3QtaG90LXRvYXN0XCI7XG5cbi8vSU5URVJOQUwgIElNUE9SVFxuaW1wb3J0IHtcbiAgUElOQVRBX0FQSV9LRVksXG4gIFBJTkFUQV9TRUNSRUNUX0tFWSxcbiAgUkVBTF9FU1RBVEVfQUJJLFxuICBSRUFMX0VTVEFURV9BRERSRVNTLFxuICBoYW5kbGVOZXR3b3JrU3dpdGNoLFxuICBBQ1RJVkVfTkVUV09SSyxcbn0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbi8vRkVUQ0ggQ09OVFJBQ1RcbmNvbnN0IEZFVENIX0NPTlRSQUNUID0gKFBST1ZJREVSKSA9PlxuICBuZXcgZXRoZXJzLkNvbnRyYWN0KFJFQUxfRVNUQVRFX0FERFJFU1MsIFJFQUxfRVNUQVRFX0FCSSwgUFJPVklERVIpO1xuXG4vL0NPTk5FQ1RJTkcgV0lUSCBDT05UUkFDVFxuY29uc3QgY29ubmVjdGluZ1dpdGhTbWFydENvbnRyYWN0ID0gYXN5bmMgKCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHdlYjNtb2RhbCA9IG5ldyBXZWIzTW9kYWwoKTtcbiAgICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgd2ViM21vZGFsLmNvbm5lY3QoKTtcbiAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcihjb25uZWN0aW9uKTtcbiAgICBjb25zdCBQUk9WSURFUiA9IHByb3ZpZGVyLmdldFNpZ25lcigpO1xuXG4gICAgY29uc3QgY29udHJhY3QgPSBGRVRDSF9DT05UUkFDVChQUk9WSURFUik7XG5cbiAgICByZXR1cm4gY29udHJhY3Q7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xuICB9XG59O1xuLy8gSU5URVJOQUxcbmNvbnN0IFN0YXRlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcblxuZXhwb3J0IGNvbnN0IFN0YXRlQ29udGV4dFByb3ZpZGVyID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgLy9TVEFURSBWQVJJQUJMRVxuICBjb25zdCBbY3VycmVudEFjY291bnQsIHNldEN1cnJlbnRBY2NvdW50XSA9IHVzZVN0YXRlKCk7XG4gIGNvbnN0IFthY2NvdW50QmFsYW5jZSwgc2V0QWNjb3VudEJhbGFuY2VdID0gdXNlU3RhdGUoKTtcbiAgY29uc3QgW3VzZXJCbGFuY2UsIHNldFVzZXJCbGFuY2VdID0gdXNlU3RhdGUoKTtcbiAgY29uc3QgW2dldEhpZ2hlc3RSYXRlZFByb2R1Y3QsIHNldEdldEhpZ2hlc3RSYXRlZFByb2R1Y3RdID0gdXNlU3RhdGUoKTtcbiAgY29uc3QgW2xvYWRlciwgc2V0TG9hZGVyXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2NvdW50LCBzZXRDb3VudF0gPSB1c2VTdGF0ZSgwKTtcblxuICAvL05PVElGSUNBVElPTlxuICBjb25zdCBub3RpZnlTdWNjZXNzID0gKG1zZykgPT4gdG9hc3Quc3VjY2Vzcyhtc2csIHsgZHVyYXRpb246IDIwMDAgfSk7XG4gIGNvbnN0IG5vdGlmeUVycm9yID0gKG1zZykgPT4gdG9hc3QuZXJyb3IobXNnLCB7IGR1cmF0aW9uOiAyMDAwIH0pO1xuXG4gIC8vLS0tQ0hFQ0sgSUYgV0FMTEVUIElTIENPTk5FQ1REXG4gIGNvbnN0IGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghd2luZG93LmV0aGVyZXVtKSByZXR1cm4gbm90aWZ5RXJyb3IoXCJJbnN0YWxsIE1hdGVNYXNrXCIpO1xuICAgICAgY29uc3QgbmV0d29yayA9IGF3YWl0IGhhbmRsZU5ldHdvcmtTd2l0Y2goKTtcblxuICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCB3aW5kb3cuZXRoZXJldW0ucmVxdWVzdCh7XG4gICAgICAgIG1ldGhvZDogXCJldGhfYWNjb3VudHNcIixcbiAgICAgIH0pO1xuICAgICAgaWYgKGFjY291bnRzLmxlbmd0aCkge1xuICAgICAgICBzZXRDdXJyZW50QWNjb3VudChhY2NvdW50c1swXSk7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKHdpbmRvdy5ldGhlcmV1bSk7XG4gICAgICAgIGNvbnN0IGdldEJhbGFuY2UgPSBhd2FpdCBwcm92aWRlci5nZXRCYWxhbmNlKGFjY291bnRzWzBdKTtcbiAgICAgICAgY29uc3QgY29udmVydEJhbCA9IGV0aGVycy51dGlscy5mb3JtYXRFdGhlcihnZXRCYWxhbmNlKTtcbiAgICAgICAgc2V0QWNjb3VudEJhbGFuY2UoY29udmVydEJhbCk7XG4gICAgICAgIHNldFVzZXJCbGFuY2UoY29udmVydEJhbCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhcIk5PIEFDQ09VTlRcIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhY2NvdW50c1swXTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coXCJOTyBDT05OQUNUSU9OXCIpO1xuICAgIH1cbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQoKTtcbiAgfSwgW10pO1xuXG4gIC8vLS0tQ09OTkVDVCBXQUxMRVQgRlVOQ1RJT05cbiAgY29uc3QgY29ubmVjdFdhbGxldCA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCF3aW5kb3cuZXRoZXJldW0pIHJldHVybiBub3RpZnlFcnJvcihcIkluc3RhbGwgTWF0ZU1hc2tcIik7XG4gICAgICBjb25zdCBuZXR3b3JrID0gYXdhaXQgaGFuZGxlTmV0d29ya1N3aXRjaCgpO1xuICAgICAgc2V0TG9hZGVyKHRydWUpO1xuICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCB3aW5kb3cuZXRoZXJldW0ucmVxdWVzdCh7XG4gICAgICAgIG1ldGhvZDogXCJldGhfcmVxdWVzdEFjY291bnRzXCIsXG4gICAgICB9KTtcblxuICAgICAgc2V0Q3VycmVudEFjY291bnQoYWNjb3VudHNbMF0pO1xuICAgICAgc2V0TG9hZGVyKGZhbHNlKTtcbiAgICAgIG5vdGlmeVN1Y2Nlc3MoXCJXYWxsZXQgY29ubmVjdGVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgICAgIHNldENvdW50KGNvdW50ICsgMSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIG5vdGlmeUVycm9yKFwiSW5zdGFsbCBNYXRlTWFza1wiKTtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgLy9DUkVBVEUgUFJPUEVSVFlcbiAgY29uc3QgY3JlYXRlUHJvcGVydHlGdW5jdGlvbiA9IGFzeW5jIChmb3JtKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgcHJvcGVydHlUaXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgY2F0ZWdvcnksXG4gICAgICBwcmljZSxcbiAgICAgIGltYWdlcyxcbiAgICAgIHByb3BlcnR5QWRkcmVzcyxcbiAgICB9ID0gZm9ybTtcblxuICAgIHRyeSB7XG4gICAgICBzZXRMb2FkZXIodHJ1ZSk7XG4gICAgICBjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdCgpO1xuXG4gICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgY2hlY2tJZldhbGxldENvbm5lY3RlZCgpO1xuXG4gICAgICBjb25zdCB0cmFuc2FjdGlvbiA9IGF3YWl0IGNvbnRyYWN0Lmxpc3RQcm9wZXJ0eShcbiAgICAgICAgYWRkcmVzcyxcbiAgICAgICAgcHJpY2UsXG4gICAgICAgIHByb3BlcnR5VGl0bGUsXG4gICAgICAgIGNhdGVnb3J5LFxuICAgICAgICBpbWFnZXMsXG4gICAgICAgIHByb3BlcnR5QWRkcmVzcyxcbiAgICAgICAgZGVzY3JpcHRpb25cbiAgICAgICk7XG5cbiAgICAgIGF3YWl0IHRyYW5zYWN0aW9uLndhaXQoKTtcbiAgICAgIHNldExvYWRlcihmYWxzZSk7XG4gICAgICBub3RpZnlTdWNjZXNzKFwiVHJhbnNhY3Rpb24gd2VudCBzdWNjZXNzZnVsbHlcIik7XG4gICAgICBzZXRDb3VudChjb3VudCArIDEpO1xuICAgICAgcm91dGVyLnB1c2goXCIvYXV0aG9yXCIpO1xuICAgICAgY29uc29sZS5sb2coXCJjb250cmFjdCBjYWxsIHN1Y2Nlc3NzXCIsIHRyYW5zYWN0aW9uKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHNldExvYWRlcihmYWxzZSk7XG4gICAgICBub3RpZnlFcnJvcihcIlNvbWV0aGluZyB3ZW50IHdyb25nXCIpO1xuICAgICAgY29uc29sZS5sb2coXCJjb250cmFjdCBjYWxsIGZhaWx1cmVcIiwgZXJyKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9XG4gIH07XG5cbiAgLy9VUERBVEUgUFJPUEVSVFlcbiAgY29uc3QgdXBkYXRlUHJvcGVydHlGdW5jdGlvbiA9IGFzeW5jIChmb3JtKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgcHJvZHVjdElkLFxuICAgICAgcHJvcGVydHlUaXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgY2F0ZWdvcnksXG4gICAgICBpbWFnZXMsXG4gICAgICBwcm9wZXJ0eUFkZHJlc3MsXG4gICAgfSA9IGZvcm07XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgY29udHJhY3QgPSBhd2FpdCBjb25uZWN0aW5nV2l0aFNtYXJ0Q29udHJhY3QoKTtcblxuICAgICAgY29uc3QgYWRkcmVzcyA9IGF3YWl0IGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQoKTtcbiAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gYXdhaXQgY29udHJhY3QudXBkYXRlUHJvcGVydHkoXG4gICAgICAgIGFkZHJlc3MsXG4gICAgICAgIHByb2R1Y3RJZCxcbiAgICAgICAgcHJvcGVydHlUaXRsZSxcbiAgICAgICAgY2F0ZWdvcnksXG4gICAgICAgIGltYWdlcyxcbiAgICAgICAgcHJvcGVydHlBZGRyZXNzLFxuICAgICAgICBkZXNjcmlwdGlvblxuICAgICAgKTtcblxuICAgICAgYXdhaXQgdHJhbnNhY3Rpb24ud2FpdCgpO1xuICAgICAgc2V0TG9hZGVyKGZhbHNlKTtcbiAgICAgIG5vdGlmeVN1Y2Nlc3MoXCJUcmFuc2FjdGlvbiB3ZW50IHN1Y2Nlc3NmdWxseVwiKTtcbiAgICAgIHNldENvdW50KGNvdW50ICsgMSk7XG4gICAgICByb3V0ZXIucHVzaChcIi9hdXRob3JcIik7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBzZXRMb2FkZXIoZmFsc2UpO1xuICAgICAgbm90aWZ5RXJyb3IoXCJTb21ldGhpbmcgd2VudCB3cm9uZ1wiKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiY29udHJhY3QgY2FsbCBmYWlsdXJlXCIsIGVycik7XG4gICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfVxuICB9O1xuXG4gIC8vVVBEQVRFIFBSSUNFXG4gIGNvbnN0IHVwZGF0ZVByaWNlRnVuY3Rpb24gPSBhc3luYyAoZm9ybSkgPT4ge1xuICAgIGNvbnN0IHsgcHJvZHVjdElELCBwcmljZSB9ID0gZm9ybTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY29udHJhY3QgPSBhd2FpdCBjb25uZWN0aW5nV2l0aFNtYXJ0Q29udHJhY3QoKTtcblxuICAgICAgY29uc3QgYWRkcmVzcyA9IGF3YWl0IGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQoKTtcbiAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gYXdhaXQgY29udHJhY3QudXBkYXRlUHJpY2UoXG4gICAgICAgIGFkZHJlc3MsXG4gICAgICAgIHByb2R1Y3RJRCxcbiAgICAgICAgZXRoZXJzLnV0aWxzLnBhcnNlRXRoZXIocHJpY2UpXG4gICAgICApO1xuXG4gICAgICBhd2FpdCB0cmFuc2FjdGlvbi53YWl0KCk7XG4gICAgICBzZXRMb2FkZXIoZmFsc2UpO1xuICAgICAgbm90aWZ5U3VjY2VzcyhcIlRyYW5zYWN0aW9uIHdlbnQgc3VjY2Vzc2Z1bGx5XCIpO1xuICAgICAgc2V0Q291bnQoY291bnQgKyAxKTtcbiAgICAgIGNvbnNvbGUuaW5mbyhcImNvbnRyYWN0IGNhbGwgc3VjY2Vzc3NcIiwgdHJhbnNhY3Rpb24pO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgc2V0TG9hZGVyKGZhbHNlKTtcbiAgICAgIG5vdGlmeUVycm9yKFwiU29tZXRoaW5nIHdlbnQgd3JvbmdcIik7XG4gICAgICBjb25zb2xlLmxvZyhcImNvbnRyYWN0IGNhbGwgZmFpbHVyZVwiLCBlcnIpO1xuICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgIH1cbiAgfTtcblxuICAvL0JVWSBQUk9QRVJUWVxuICBjb25zdCBidXlQcm9wZXJ0eUZ1bmN0aW9uID0gYXN5bmMgKGJ1eWluZykgPT4ge1xuICAgIGNvbnN0IHsgcHJvZHVjdElELCBhbW91bnQgfSA9IGJ1eWluZztcbiAgICBjb25zdCBtb25leSA9IGV0aGVycy51dGlscy5wYXJzZUV0aGVyKGFtb3VudCk7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgY29udHJhY3QgPSBhd2FpdCBjb25uZWN0aW5nV2l0aFNtYXJ0Q29udHJhY3QoKTtcblxuICAgICAgY29uc3QgYWRkcmVzcyA9IGF3YWl0IGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQoKTtcblxuICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSBhd2FpdCBjb250cmFjdC5idXlQcm9wZXJ0eShwcm9kdWN0SUQsIGFkZHJlc3MsIHtcbiAgICAgICAgdmFsdWU6IG1vbmV5LnRvU3RyaW5nKCksXG4gICAgICB9KTtcbiAgICAgIGF3YWl0IHRyYW5zYWN0aW9uLndhaXQoKTtcbiAgICAgIGNvbnNvbGUuaW5mbyhcImNvbnRyYWN0IGNhbGwgc3VjY2Vzc3NcIiwgdHJhbnNhY3Rpb24pO1xuICAgICAgc2V0TG9hZGVyKGZhbHNlKTtcbiAgICAgIG5vdGlmeVN1Y2Nlc3MoXCJUcmFuc2FjdGlvbiB3ZW50IHN1Y2Nlc3NmdWxseVwiKTtcbiAgICAgIHNldENvdW50KGNvdW50ICsgMSk7XG4gICAgICByb3V0ZXIucHVzaChcIi9hdXRob3JcIik7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBzZXRMb2FkZXIoZmFsc2UpO1xuICAgICAgbm90aWZ5RXJyb3IoXCJTb21ldGhpbmcgd2VudCB3cm9uZ1wiKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiY29udHJhY3QgY2FsbCBmYWlsdXJlXCIsIGVycik7XG4gICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfVxuICB9O1xuXG4gIC8vQUREIFJFVklFV1xuICBjb25zdCBhZGRSZXZpZXdGdW5jdGlvbiA9IGFzeW5jIChmcm9tKSA9PiB7XG4gICAgY29uc3QgeyBwcm9kdWN0SUQsIHJhdGluZywgY29tbWVudCB9ID0gZnJvbTtcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdCgpO1xuXG4gICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgY2hlY2tJZldhbGxldENvbm5lY3RlZCgpO1xuXG4gICAgICBjb25zdCB0cmFuc2FjdGlvbiA9IGF3YWl0IGNvbnRyYWN0LmFkZFJldmlldyhcbiAgICAgICAgcHJvZHVjdElELFxuICAgICAgICByYXRpbmcsXG4gICAgICAgIGNvbW1lbnQsXG4gICAgICAgIGFkZHJlc3NcbiAgICAgICk7XG4gICAgICBhd2FpdCB0cmFuc2FjdGlvbi53YWl0KCk7XG4gICAgICBzZXRMb2FkZXIoZmFsc2UpO1xuICAgICAgbm90aWZ5U3VjY2VzcyhcIlRyYW5zYWN0aW9uIHdlbnQgc3VjY2Vzc2Z1bGx5XCIpO1xuICAgICAgc2V0Q291bnQoY291bnQgKyAxKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHNldExvYWRlcihmYWxzZSk7XG4gICAgICBub3RpZnlFcnJvcihcIlNvbWV0aGluZyB3ZW50IHdyb25nXCIpO1xuICAgICAgY29uc29sZS5sb2coXCJjb250cmFjdCBjYWxsIGZhaWx1cmVcIiwgZXJyKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9XG4gIH07XG5cbiAgLy9SRVZJRVcgLSBMSUtFXG4gIGNvbnN0IGxpa2VSZXZpZXdGdW5jdGlvbiA9IGFzeW5jIChwcm9kdWN0SUQsIHJldmlld0luZGV4KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdGluZ1dpdGhTbWFydENvbnRyYWN0KCk7XG4gICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgY2hlY2tJZldhbGxldENvbm5lY3RlZCgpO1xuICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSBhd2FpdCBjb250cmFjdC5saWtlUmV2aWV3KFxuICAgICAgICBwcm9kdWN0SUQsXG4gICAgICAgIHJldmlld0luZGV4LFxuICAgICAgICBhZGRyZXNzXG4gICAgICApO1xuICAgICAgYXdhaXQgdHJhbnNhY3Rpb24ud2FpdCgpO1xuICAgICAgc2V0TG9hZGVyKGZhbHNlKTtcbiAgICAgIG5vdGlmeVN1Y2Nlc3MoXCJUcmFuc2FjdGlvbiB3ZW50IHN1Y2Nlc3NmdWxseVwiKTtcbiAgICAgIHNldENvdW50KGNvdW50ICsgMSk7XG4gICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBzZXRMb2FkZXIoZmFsc2UpO1xuICAgICAgbm90aWZ5RXJyb3IoXCJTb21ldGhpbmcgd2VudCB3cm9uZ1wiKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiY29udHJhY3QgY2FsbCBmYWlsdXJlXCIsIGVycik7XG4gICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfVxuICB9O1xuXG4gIC8vR0VUIFBST1BFUlRJRVMgREFUQSBOT1JBTUxcblxuICAvL2dldEFsbFByb3BlcnRpZXMoKVxuICBjb25zdCBnZXRQcm9wZXJ0aWVzRGF0YSA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgY2hlY2tJZldhbGxldENvbm5lY3RlZCgpO1xuICAgIHRyeSB7XG4gICAgICBpZiAoYWRkcmVzcykge1xuICAgICAgICBjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdCgpO1xuXG4gICAgICAgIGNvbnN0IHByb3BlcnRpZXMgPSBhd2FpdCBjb250cmFjdD8uZ2V0QWxsUHJvcGVydGllcygpO1xuXG4gICAgICAgIGNvbnN0IHBhcnNlZFByb3BlcnRpZXMgPSBwcm9wZXJ0aWVzPy5tYXAoKHByb3BlcnR5LCBpKSA9PiAoe1xuICAgICAgICAgIG93bmVyOiBwcm9wZXJ0eS5vd25lcixcbiAgICAgICAgICB0aXRsZTogcHJvcGVydHkucHJvcGVydHlUaXRsZSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogcHJvcGVydHkuZGVzY3JpcHRpb24sXG4gICAgICAgICAgY2F0ZWdvcnk6IHByb3BlcnR5LmNhdGVnb3J5LFxuICAgICAgICAgIHByaWNlOiBldGhlcnMudXRpbHMuZm9ybWF0RXRoZXIocHJvcGVydHkucHJpY2UudG9TdHJpbmcoKSksXG4gICAgICAgICAgcHJvZHVjdElEOiBwcm9wZXJ0eS5wcm9kdWN0SUQudG9OdW1iZXIoKSxcbiAgICAgICAgICByZXZpZXdlcnM6IHByb3BlcnR5LnJldmlld2VycyxcbiAgICAgICAgICByZXZpZXdzOiBwcm9wZXJ0eS5yZXZpZXdzLFxuICAgICAgICAgIGltYWdlOiBwcm9wZXJ0eS5pbWFnZXMsXG4gICAgICAgICAgYWRkcmVzczogcHJvcGVydHkucHJvcGVydHlBZGRyZXNzLFxuICAgICAgICB9KSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHBhcnNlZFByb3BlcnRpZXMpO1xuICAgICAgICByZXR1cm4gcGFyc2VkUHJvcGVydGllcztcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICAvL2dldEhpZ2hlc3RSYXRlZFByb2R1Y3QoKVxuICBjb25zdCBnZXRIaWdoZXN0UmF0ZWRQcm9kdWN0RnVuY3Rpb24gPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFkZHJlc3MgPSBhd2FpdCBjaGVja0lmV2FsbGV0Q29ubmVjdGVkKCk7XG4gICAgICBpZiAoYWRkcmVzcykge1xuICAgICAgICBjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdCgpO1xuICAgICAgICBjb25zdCB0b3RhbFJldmlld3MgPSBhd2FpdCBjb250cmFjdC5nZXRIaWdoZXN0UmF0ZWRQcm9kdWN0KCk7XG5cbiAgICAgICAgc2V0R2V0SGlnaGVzdFJhdGVkUHJvZHVjdCh0b3RhbFJldmlld3MudG9OdW1iZXIoKSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgLy9nZXRQcm9kdWN0UmV2aWV3cygpXG4gIGNvbnN0IGdldFByb2R1Y3RSZXZpZXdzRnVuY3Rpb24gPSBhc3luYyAocHJvZHVjdElkKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFkZHJlc3MgPSBhd2FpdCBjaGVja0lmV2FsbGV0Q29ubmVjdGVkKCk7XG4gICAgICBpZiAoYWRkcmVzcykge1xuICAgICAgICBjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdCgpO1xuXG4gICAgICAgIGNvbnN0IGdldFByb2R1Y3RSZXZpZXdzID0gYXdhaXQgY29udHJhY3QuZ2V0UHJvZHVjdFJldmlld3MoXG4gICAgICAgICAgTnVtYmVyKHByb2R1Y3RJZClcbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCBwYXJzZWRSZXZpZXdzID0gZ2V0UHJvZHVjdFJldmlld3M/Lm1hcCgocmV2aWV3LCBpKSA9PiAoe1xuICAgICAgICAgIHJldmlld2VyOiByZXZpZXcucmV2aWV3ZXIsXG4gICAgICAgICAgbGlrZXM6IHJldmlldy5saWtlcy50b051bWJlcigpLFxuICAgICAgICAgIGNvbW1lbnQ6IHJldmlldy5jb21tZW50LFxuICAgICAgICAgIHJhdGluZzogcmV2aWV3LnJhdGluZyxcbiAgICAgICAgICBwcm9kdWN0SUQ6IHJldmlldy5wcm9kdWN0SWQudG9OdW1iZXIoKSxcbiAgICAgICAgICByZXZpZXdJbmRleDogcmV2aWV3LnJldmlld0luZGV4LnRvTnVtYmVyKCksXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHBhcnNlZFJldmlld3M7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgLy9nZXRQcm9wZXJ0eSgpXG4gIGNvbnN0IGdldFByb3BlcnR5RnVuY3Rpb24gPSBhc3luYyAoaWQpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgYWRkcmVzcyA9IGF3YWl0IGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQoKTtcbiAgICAgIGlmIChhZGRyZXNzKSB7XG4gICAgICAgIGNvbnN0IGNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdGluZ1dpdGhTbWFydENvbnRyYWN0KCk7XG4gICAgICAgIGNvbnN0IHByb3BlcnR5SXRlbSA9IGF3YWl0IGNvbnRyYWN0LmdldFByb3BlcnR5KE51bWJlcihpZCkpO1xuXG4gICAgICAgIGNvbnN0IHByb3BlcnR5ID0ge1xuICAgICAgICAgIHByb2R1Y3RJRDogcHJvcGVydHlJdGVtPy5bMF0udG9OdW1iZXIoKSxcbiAgICAgICAgICBvd25lcjogcHJvcGVydHlJdGVtPy5bMV0sXG4gICAgICAgICAgdGl0bGU6IHByb3BlcnR5SXRlbT8uWzNdLFxuICAgICAgICAgIGNhdGVnb3J5OiBwcm9wZXJ0eUl0ZW0/Lls0XSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogcHJvcGVydHlJdGVtPy5bN10sXG4gICAgICAgICAgcHJpY2U6IGV0aGVycy51dGlscy5mb3JtYXRFdGhlcihwcm9wZXJ0eUl0ZW0/LlsyXS50b1N0cmluZygpKSxcbiAgICAgICAgICBhZGRyZXNzOiBwcm9wZXJ0eUl0ZW0/Lls2XSxcbiAgICAgICAgICBpbWFnZTogcHJvcGVydHlJdGVtPy5bNV0sXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIHByb3BlcnR5O1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfVxuICB9O1xuXG4gIC8vZ2V0VXNlclByb3BlcnRpZXMoKVxuICBjb25zdCBnZXRVc2VyUHJvcGVydGllc0Z1bmN0aW9uID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgY2hlY2tJZldhbGxldENvbm5lY3RlZCgpO1xuICAgICAgaWYgKGFkZHJlc3MpIHtcbiAgICAgICAgY29uc3QgY29udHJhY3QgPSBhd2FpdCBjb25uZWN0aW5nV2l0aFNtYXJ0Q29udHJhY3QoKTtcblxuICAgICAgICBjb25zdCBwcm9wZXJ0aWVzID0gYXdhaXQgY29udHJhY3QuZ2V0VXNlclByb3BlcnRpZXMoYWRkcmVzcyk7XG5cbiAgICAgICAgY29uc3QgcGFyc2VkUHJvcGVydGllcyA9IHByb3BlcnRpZXMubWFwKChwcm9wZXJ0eSwgaSkgPT4gKHtcbiAgICAgICAgICBvd25lcjogcHJvcGVydHkub3duZXIsXG4gICAgICAgICAgdGl0bGU6IHByb3BlcnR5LnByb3BlcnR5VGl0bGUsXG4gICAgICAgICAgZGVzY3JpcHRpb246IHByb3BlcnR5LmRlc2NyaXB0aW9uLFxuICAgICAgICAgIGNhdGVnb3J5OiBwcm9wZXJ0eS5jYXRlZ29yeSxcbiAgICAgICAgICBwcmljZTogZXRoZXJzLnV0aWxzLmZvcm1hdEV0aGVyKHByb3BlcnR5LnByaWNlLnRvU3RyaW5nKCkpLFxuICAgICAgICAgIHByb2R1Y3RJRDogcHJvcGVydHkucHJvZHVjdElELnRvTnVtYmVyKCksXG4gICAgICAgICAgcmV2aWV3ZXJzOiBwcm9wZXJ0eS5yZXZpZXdlcnMsXG4gICAgICAgICAgcmV2aWV3czogcHJvcGVydHkucmV2aWV3cyxcbiAgICAgICAgICBpbWFnZTogcHJvcGVydHkuaW1hZ2VzLFxuICAgICAgICAgIGFkZHJlc3M6IHByb3BlcnR5LnByb3BlcnR5QWRkcmVzcyxcbiAgICAgICAgfSkpO1xuXG4gICAgICAgIHJldHVybiBwYXJzZWRQcm9wZXJ0aWVzO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfVxuICB9O1xuXG4gIC8vZ2V0VXNlclJldmlld3MoKVxuICBjb25zdCBnZXRVc2VyUmV2aWV3c0Z1bmN0aW9uID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgY2hlY2tJZldhbGxldENvbm5lY3RlZCgpO1xuICAgICAgaWYgKGFkZHJlc3MpIHtcbiAgICAgICAgY29uc3QgY29udHJhY3QgPSBhd2FpdCBjb25uZWN0aW5nV2l0aFNtYXJ0Q29udHJhY3QoKTtcbiAgICAgICAgY29uc3QgZ2V0VXNlclJldmlld3MgPSBhd2FpdCBjb250cmFjdC5nZXRVc2VyUmV2aWV3cyhhZGRyZXNzKTtcblxuICAgICAgICBjb25zdCBwYXJzZWRVc2VyUmV2aWV3cyA9IGdldFVzZXJSZXZpZXdzLm1hcCgocHJvcGVydHksIGkpID0+ICh7XG4gICAgICAgICAgY29tbWVudDogcHJvcGVydHkuY29tbWVudCxcbiAgICAgICAgICBsaWtlczogcHJvcGVydHkubGlrZXMudG9OdW1iZXIoKSxcbiAgICAgICAgICBwcm9kdWN0SWQ6IHByb3BlcnR5LnByb2R1Y3RJZC50b051bWJlcigpLFxuICAgICAgICAgIHJhdGluZzogcHJvcGVydHkucmF0aW5nLFxuICAgICAgICAgIHJldmlld0luZGV4OiBwcm9wZXJ0eS5yZXZpZXdJbmRleC50b051bWJlcigpLFxuICAgICAgICAgIHJldmlld2VyOiBwcm9wZXJ0eS5yZXZpZXdlcixcbiAgICAgICAgfSkpO1xuXG4gICAgICAgIHJldHVybiBwYXJzZWRVc2VyUmV2aWV3cztcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICAvL3RvdGFsUHJvcGVydHkoKVxuICBjb25zdCB0b3RhbFByb3BlcnR5RnVuY3Rpb24gPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFkZHJlc3MgPSBhd2FpdCBjaGVja0lmV2FsbGV0Q29ubmVjdGVkKCk7XG4gICAgICBpZiAoYWRkcmVzcykge1xuICAgICAgICBjb25zdCBjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RpbmdXaXRoU21hcnRDb250cmFjdCgpO1xuXG4gICAgICAgIGNvbnN0IHRvdGFsUHJvcGVydHkgPSBhd2FpdCBjb250cmFjdC5wcm9wZXJ0eUluZGV4KCk7XG5cbiAgICAgICAgcmV0dXJuIHRvdGFsUHJvcGVydHkudG9OdW1iZXIoKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCB0b3RhbFJldmlld3NGdW5jdGlvbiA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgYWRkcmVzcyA9IGF3YWl0IGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQoKTtcbiAgICAgIGlmIChhZGRyZXNzKSB7XG4gICAgICAgIGNvbnN0IGNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdGluZ1dpdGhTbWFydENvbnRyYWN0KCk7XG5cbiAgICAgICAgY29uc3QgdG90YWxSZXZpZXdzID0gYXdhaXQgY29udHJhY3QucmV2aWV3c0NvdW50ZXIoKTtcblxuICAgICAgICByZXR1cm4gdG90YWxSZXZpZXdzLnRvTnVtYmVyKCk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBnZXRIaWdoZXN0UmF0ZWRQcm9kdWN0RnVuY3Rpb24oKTtcbiAgICBnZXRVc2VyUmV2aWV3c0Z1bmN0aW9uKCk7XG4gICAgdG90YWxQcm9wZXJ0eUZ1bmN0aW9uKCk7XG4gICAgdG90YWxSZXZpZXdzRnVuY3Rpb24oKTtcbiAgfSwgW2N1cnJlbnRBY2NvdW50XSk7XG5cbiAgcmV0dXJuIChcbiAgICA8U3RhdGVDb250ZXh0LlByb3ZpZGVyXG4gICAgICB2YWx1ZT17e1xuICAgICAgICAvL0NPTlRSQUNUXG4gICAgICAgIGNvbm5lY3RXYWxsZXQsXG4gICAgICAgIGN1cnJlbnRBY2NvdW50LFxuICAgICAgICBhY2NvdW50QmFsYW5jZSxcbiAgICAgICAgLy9QUk9QRVJUWVxuICAgICAgICBjcmVhdGVQcm9wZXJ0eUZ1bmN0aW9uLFxuICAgICAgICB1cGRhdGVQcm9wZXJ0eUZ1bmN0aW9uLFxuICAgICAgICB1cGRhdGVQcmljZUZ1bmN0aW9uLFxuICAgICAgICBidXlQcm9wZXJ0eUZ1bmN0aW9uLFxuICAgICAgICBnZXRQcm9wZXJ0eUZ1bmN0aW9uLFxuICAgICAgICBnZXRVc2VyUHJvcGVydGllc0Z1bmN0aW9uLFxuICAgICAgICB0b3RhbFByb3BlcnR5RnVuY3Rpb24sXG4gICAgICAgIGdldFByb3BlcnRpZXNEYXRhLFxuICAgICAgICAvL1JFVklFV1xuICAgICAgICBhZGRSZXZpZXdGdW5jdGlvbixcbiAgICAgICAgbGlrZVJldmlld0Z1bmN0aW9uLFxuICAgICAgICBnZXRQcm9kdWN0UmV2aWV3c0Z1bmN0aW9uLFxuICAgICAgICBnZXRVc2VyUmV2aWV3c0Z1bmN0aW9uLFxuICAgICAgICB0b3RhbFJldmlld3NGdW5jdGlvbixcbiAgICAgICAgZ2V0SGlnaGVzdFJhdGVkUHJvZHVjdCxcbiAgICAgICAgLy9TVEFURSBWQVJJQUJMRVxuICAgICAgICB1c2VyQmxhbmNlLFxuICAgICAgICBQSU5BVEFfQVBJX0tFWSxcbiAgICAgICAgUElOQVRBX1NFQ1JFQ1RfS0VZLFxuICAgICAgICBsb2FkZXIsXG4gICAgICAgIHNldExvYWRlcixcbiAgICAgICAgbm90aWZ5U3VjY2VzcyxcbiAgICAgICAgbm90aWZ5RXJyb3IsXG4gICAgICB9fVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1N0YXRlQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VTdGF0ZUNvbnRleHQgPSAoKSA9PiB1c2VDb250ZXh0KFN0YXRlQ29udGV4dCk7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVzZUNvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidXNlUm91dGVyIiwiZXRoZXJzIiwiV2ViM01vZGFsIiwidG9hc3QiLCJQSU5BVEFfQVBJX0tFWSIsIlBJTkFUQV9TRUNSRUNUX0tFWSIsIlJFQUxfRVNUQVRFX0FCSSIsIlJFQUxfRVNUQVRFX0FERFJFU1MiLCJoYW5kbGVOZXR3b3JrU3dpdGNoIiwiQUNUSVZFX05FVFdPUksiLCJGRVRDSF9DT05UUkFDVCIsIlBST1ZJREVSIiwiQ29udHJhY3QiLCJjb25uZWN0aW5nV2l0aFNtYXJ0Q29udHJhY3QiLCJ3ZWIzbW9kYWwiLCJjb25uZWN0aW9uIiwiY29ubmVjdCIsInByb3ZpZGVyIiwicHJvdmlkZXJzIiwiV2ViM1Byb3ZpZGVyIiwiZ2V0U2lnbmVyIiwiY29udHJhY3QiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJTdGF0ZUNvbnRleHQiLCJTdGF0ZUNvbnRleHRQcm92aWRlciIsImNoaWxkcmVuIiwicm91dGVyIiwiY3VycmVudEFjY291bnQiLCJzZXRDdXJyZW50QWNjb3VudCIsImFjY291bnRCYWxhbmNlIiwic2V0QWNjb3VudEJhbGFuY2UiLCJ1c2VyQmxhbmNlIiwic2V0VXNlckJsYW5jZSIsImdldEhpZ2hlc3RSYXRlZFByb2R1Y3QiLCJzZXRHZXRIaWdoZXN0UmF0ZWRQcm9kdWN0IiwibG9hZGVyIiwic2V0TG9hZGVyIiwiY291bnQiLCJzZXRDb3VudCIsIm5vdGlmeVN1Y2Nlc3MiLCJtc2ciLCJzdWNjZXNzIiwiZHVyYXRpb24iLCJub3RpZnlFcnJvciIsImNoZWNrSWZXYWxsZXRDb25uZWN0ZWQiLCJ3aW5kb3ciLCJldGhlcmV1bSIsIm5ldHdvcmsiLCJhY2NvdW50cyIsInJlcXVlc3QiLCJtZXRob2QiLCJsZW5ndGgiLCJnZXRCYWxhbmNlIiwiY29udmVydEJhbCIsInV0aWxzIiwiZm9ybWF0RXRoZXIiLCJjb25uZWN0V2FsbGV0IiwiY3JlYXRlUHJvcGVydHlGdW5jdGlvbiIsImZvcm0iLCJwcm9wZXJ0eVRpdGxlIiwiZGVzY3JpcHRpb24iLCJjYXRlZ29yeSIsInByaWNlIiwiaW1hZ2VzIiwicHJvcGVydHlBZGRyZXNzIiwiYWRkcmVzcyIsInRyYW5zYWN0aW9uIiwibGlzdFByb3BlcnR5Iiwid2FpdCIsInB1c2giLCJlcnIiLCJsb2NhdGlvbiIsInJlbG9hZCIsInVwZGF0ZVByb3BlcnR5RnVuY3Rpb24iLCJwcm9kdWN0SWQiLCJ1cGRhdGVQcm9wZXJ0eSIsInVwZGF0ZVByaWNlRnVuY3Rpb24iLCJwcm9kdWN0SUQiLCJ1cGRhdGVQcmljZSIsInBhcnNlRXRoZXIiLCJpbmZvIiwiYnV5UHJvcGVydHlGdW5jdGlvbiIsImJ1eWluZyIsImFtb3VudCIsIm1vbmV5IiwiYnV5UHJvcGVydHkiLCJ2YWx1ZSIsInRvU3RyaW5nIiwiYWRkUmV2aWV3RnVuY3Rpb24iLCJmcm9tIiwicmF0aW5nIiwiY29tbWVudCIsImFkZFJldmlldyIsImxpa2VSZXZpZXdGdW5jdGlvbiIsInJldmlld0luZGV4IiwibGlrZVJldmlldyIsImdldFByb3BlcnRpZXNEYXRhIiwicHJvcGVydGllcyIsImdldEFsbFByb3BlcnRpZXMiLCJwYXJzZWRQcm9wZXJ0aWVzIiwibWFwIiwicHJvcGVydHkiLCJpIiwib3duZXIiLCJ0aXRsZSIsInRvTnVtYmVyIiwicmV2aWV3ZXJzIiwicmV2aWV3cyIsImltYWdlIiwiZ2V0SGlnaGVzdFJhdGVkUHJvZHVjdEZ1bmN0aW9uIiwidG90YWxSZXZpZXdzIiwiZ2V0UHJvZHVjdFJldmlld3NGdW5jdGlvbiIsImdldFByb2R1Y3RSZXZpZXdzIiwiTnVtYmVyIiwicGFyc2VkUmV2aWV3cyIsInJldmlldyIsInJldmlld2VyIiwibGlrZXMiLCJnZXRQcm9wZXJ0eUZ1bmN0aW9uIiwiaWQiLCJwcm9wZXJ0eUl0ZW0iLCJnZXRQcm9wZXJ0eSIsImdldFVzZXJQcm9wZXJ0aWVzRnVuY3Rpb24iLCJnZXRVc2VyUHJvcGVydGllcyIsImdldFVzZXJSZXZpZXdzRnVuY3Rpb24iLCJnZXRVc2VyUmV2aWV3cyIsInBhcnNlZFVzZXJSZXZpZXdzIiwidG90YWxQcm9wZXJ0eUZ1bmN0aW9uIiwidG90YWxQcm9wZXJ0eSIsInByb3BlcnR5SW5kZXgiLCJ0b3RhbFJldmlld3NGdW5jdGlvbiIsInJldmlld3NDb3VudGVyIiwiUHJvdmlkZXIiLCJ1c2VTdGF0ZUNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./context/index.js\n"));

/***/ })

});